<p>I am trying to put data that i get from a webservice into a custom adapter to show in my grid, the problem is that the download takes some time to finish in an Async call so when i try to set the adapter the Array of data(movies in this case) is null.</p>

<p>Heres my activity:</p>

<pre><code>package com.movieposter;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.widget.GridView;

import com.squareup.okhttp.Call;
import com.squareup.okhttp.Callback;
import com.squareup.okhttp.OkHttpClient;
import com.squareup.okhttp.Request;
import com.squareup.okhttp.Response;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

public class MainActivity extends AppCompatActivity {

    private final String API = "***";
    private Movie[] movies;
    private GridView grid;
    private ImageAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        grid = (GridView) findViewById(R.id.grid_view);
        getMovies();
        ImageAdapter adapter = new ImageAdapter(this, movies);
        grid.setAdapter(adapter);


    }

    public void getMovies(){
        OkHttpClient client = new OkHttpClient();
        Request request = new Request.Builder()
                .url("http://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=**")
                .build();
        Call call = client.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Request request, IOException e) {

            }

            @Override
            public void onResponse(Response response) throws IOException {
                String json = response.body().string();
                if (response.isSuccessful()) {
                    try {
                        Log.i("teste", response.body().string());
                        movies = parseMovie(json);



                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        });
    }

    private Movie[] parseMovie(String json) throws JSONException {
        JSONObject jsonMovie = new JSONObject(json);
        JSONArray data = jsonMovie.getJSONArray("results");
        Movie[] movies = new Movie[data.length()];

        for(int i = 0; i < data.length(); i++ ){
            JSONObject jsonObject = data.getJSONObject(i);
            Movie movie = new Movie();
            movie.setOverview(jsonObject.getString("overview"));
            movie.setRating(jsonObject.getDouble("vote_average"));
            movie.setReleaseDate(jsonObject.getString("release_date"));
            movie.setTitle(jsonObject.getString("title"));
            movie.setThumbnail("http://image.tmdb.org/t/p/w185/" + jsonObject.getString("poster_path"));
            movies[i] = movie;
        }
        return movies;
    }



}
</code></pre>

<p>And my adapter</p>

<pre><code>package com.movieposter;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;

import com.squareup.picasso.Picasso;

public class ImageAdapter extends BaseAdapter {
    private Context mContext;
    Movie[] movies;

    public ImageAdapter(Context c, Movie[] movies) {
        mContext = c;
        this.movies = movies;
    }

    public int getCount() {
        return movies.length;
    }

    public Object getItem(int position) {
        return movies[position];
    }

    public long getItemId(int position) {
        return 0;
    }

    // create a new ImageView for each item referenced by the Adapter
    public View getView(int position, View convertView, ViewGroup parent) {
        ImageView imageView;
        if (convertView == null) {
            // if it's not recycled, initialize some attributes
            imageView = new ImageView(mContext);
            imageView.setLayoutParams(new GridView.LayoutParams(85, 85));
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imageView.setPadding(8, 8, 8, 8);
        } else {
            imageView = (ImageView) convertView;
        }

        Picasso.with(mContext).load(movies[position].getThumbnail()).into(imageView);
        return imageView;
    }

}
</code></pre>

<p>I tried to set the adapter inside the onResponse method but that did not work, whats the best approach for loading data from webservices into your apater if you dont know when the data will finish? Is it possible to set a empty adapter and then replace the contents once the data is ready? is so, how?</p>
