<p>I have a <code>GridMarkerClusterer</code> with some <code>Marker</code> in it representing shared bike stations. I want those markers have a custom <code>MarkerInfoWindow</code> (bubble) with a click listener so that when the user clicks on the bubble, a new intent is launched.</p>

<p>Thus far, I'm OK.</p>

<p>Now I want to put extra data (station information corresponding to the marker) to that intent.</p>

<p>What I actually did is to add a constructor in my <code>StationMarkerInfoWindow</code> which takes a <code>Station</code> in parameter. I then add this parameter to the intent with <code>putExtra()</code> in my <code>OnClickListener</code>.</p>

<p>That's <em>working</em> but what is wrong is that I need to create a new <code>StationMarkerInfoWindow</code> for each marker instead of using the same object, and if I have more than 1000 markers to display, the activity takes up to 10 seconds to be created on my device (~1 second if I use the same <code>StationMarkerInfoWindow</code> object for each marker).</p>

<p>The <strong>question</strong> is: how should I add those data to the intent?</p>

<p>Here are the relevant parts of the code:</p>

<pre><code>
public class MapActivity extends Activity {

    private BikeNetwork bikeNetwork;
    private ArrayList<Station> stations;
    private MapView map;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_map);

        // ...

        stations = bikeNetwork.getStations();

        map = (MapView) findViewById(R.id.mapView);

        GridMarkerClusterer stationsMarkers = new GridMarkerClusterer(this);
        Drawable clusterIconD = getResources().getDrawable(R.drawable.marker_cluster);
        Bitmap clusterIcon = ((BitmapDrawable) clusterIconD).getBitmap();
        map.getOverlays().add(stationsMarkers);
        stationsMarkers.setIcon(clusterIcon);
        stationsMarkers.setGridSize(100);

        for (final Station station : stations) {
            stationsMarkers.add(createStationMarker(station));
        }

        // ...
    }

    private Marker createStationMarker(Station station) {
        Marker marker = new Marker(map);
        marker.setInfoWindow(new StationMarkerInfoWindow(
                R.layout.bonuspack_bubble, map, station)); // this seems wrong
        marker.setInfoWindow(stationMarkerInfoWindow);
        marker.setPosition(stationLocation);
        marker.setAnchor(Marker.ANCHOR_CENTER, Marker.ANCHOR_CENTER);
        marker.setIcon(getResources().getDrawable(R.drawable.ic_bike));
        marker.setTitle(station.getName());
        marker.setSnippet(String.valueOf(station.getFreeBikes())); // free bikes
        marker.setSubDescription(String.valueOf(station.getEmptySlots())); // empty slots

        return marker;
    }

    private class StationMarkerInfoWindow extends MarkerInfoWindow {
        Station station;

        public StationMarkerInfoWindow(int layoutResId, final MapView mapView, final Station station) {
            super(layoutResId, mapView);
            this.station = station;
        }

        @Override
        public void onOpen(Object item) {
            super.onOpen(item);
            closeAllInfoWindowsOn(map);

            LinearLayout layout = (LinearLayout) getView().findViewById(R.id.map_bubble_layout);
            layout.setClickable(true);
            layout.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    Intent intent = new Intent(MapActivity.this, StationActivity.class);
                    intent.putExtra("station", station);
                    startActivity(intent);
                }
            });
        }
    }
}
</code></pre>
