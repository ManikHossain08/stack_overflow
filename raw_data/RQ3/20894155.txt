<p>I tried to add a button, and have it switch layouts when clicked, but every time I run the app; it stops unexpectedly. I am very confused, if someone could help me that would be awesome.</p>

<p>Logcat messages -</p>

<pre><code>01-02 18:41:54.844: W/dalvikvm(2070): threadid=1: thread exiting with uncaught exception (group=0xb0f00648)
01-02 18:41:54.844: E/AndroidRuntime(2070): FATAL EXCEPTION: main
01-02 18:41:54.844: E/AndroidRuntime(2070): java.lang.NullPointerException
01-02 18:41:54.844: E/AndroidRuntime(2070):     at sehej.android.doge.FullscreenActivity$3.onVisibilityChange(FullscreenActivity.java:82)
01-02 18:41:54.844: E/AndroidRuntime(2070):     at sehej.android.doge.util.SystemUiHiderHoneycomb$1.onSystemUiVisibilityChange(SystemUiHiderHoneycomb.java:113)
</code></pre>

<p>FullScreenActivity.java (Java file for home screen) - </p>

<pre><code>public class FullscreenActivity extends Activity {
    private static final boolean AUTO_HIDE = true;
    private static final int AUTO_HIDE_DELAY_MILLIS = 3000;
    private static final boolean TOGGLE_ON_CLICK = true;
    private static final int HIDER_FLAGS = SystemUiHider.FLAG_HIDE_NAVIGATION;
    private SystemUiHider mSystemUiHider;

    public void button1_click(final View view)
    {
      startActivity(new Intent(this, MainGameActivity.class));
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);

        final View controlsView = findViewById(R.id.fullscreen_content_controls);
        final View contentView = findViewById(R.id.fullscreen_content);

        mSystemUiHider = SystemUiHider.getInstance(this, contentView,
                HIDER_FLAGS);
        mSystemUiHider.setup();
        mSystemUiHider
                .setOnVisibilityChangeListener(new SystemUiHider.OnVisibilityChangeListener() {
                    // Cached values.
                    int mControlsHeight;
                    int mShortAnimTime;

                    @Override
                    @TargetApi(Build.VERSION_CODES.HONEYCOMB_MR2)
                    public void onVisibilityChange(boolean visible) {
                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB_MR2) {

                            if (mControlsHeight == 0) {
                                mControlsHeight = controlsView.getHeight();
                            }
                            if (mShortAnimTime == 0) {
                                mShortAnimTime = getResources().getInteger(
                                        android.R.integer.config_shortAnimTime);
                            }
                            controlsView
                                    .animate()
                                    .translationY(visible ? 0 : mControlsHeight)
                                    .setDuration(mShortAnimTime);
                        } else {
                            controlsView.setVisibility(visible ? View.VISIBLE
                                    : View.GONE);
                        }

                        if (visible && AUTO_HIDE) {                         delayedHide(AUTO_HIDE_DELAY_MILLIS);
                        }
                    }
                });

        // Set up the user interaction to manually show or hide the system UI.
        contentView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (TOGGLE_ON_CLICK) {
                    mSystemUiHider.toggle();
                } else {
                    mSystemUiHider.show();
                }
            }
        });
        };

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        delayedHide(100);
    }

    View.OnTouchListener mDelayHideTouchListener = new View.OnTouchListener() {
        @Override
        public boolean onTouch(View view, MotionEvent motionEvent) {
            if (AUTO_HIDE) {
                delayedHide(AUTO_HIDE_DELAY_MILLIS);
            }
            return false; 
        }
    };

    Handler mHideHandler = new Handler();
    Runnable mHideRunnable = new Runnable() {
        @Override
        public void run() {
            mSystemUiHider.hide();
        }
    };

    private void delayedHide(int delayMillis) {
        mHideHandler.removeCallbacks(mHideRunnable);
        mHideHandler.postDelayed(mHideRunnable, delayMillis);
    }
}
</code></pre>

<p>activity_main.xml (layout for home screen) - </p>

<pre><code><RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/grass"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    app:padding="20sp"
    app:textAlignment="center"
    tools:context=".MainActivity" >

    <View
        app:id="@+id/fullscreen_content_controls"
        app:layout_width="wrap_content"
        app:layout_height="wrap_content" />

    <View
        app:id="@+id/fullscreen_content"
        app:layout_width="wrap_content"
        app:layout_height="wrap_content" />

    <requestFocus
        app:layout_width="wrap_content"
        app:layout_height="wrap_content" />

    <Button
        app:id="@+id/button1"
        style="@style/ButtonBar"
        app:layout_width="150dp"
        app:layout_height="wrap_content"
        app:layout_below="@+id/textView1"
        app:layout_centerHorizontal="true"
        app:layout_marginTop="45dp"
        app:onClick="button1_click"
        app:text="@string/button1"
        app:typeface="sans" />

    <TextView
        app:id="@+id/textView1"
        app:layout_width="wrap_content"
        app:layout_height="wrap_content"
        app:layout_alignParentTop="true"
        app:layout_centerHorizontal="true"
        app:layout_marginTop="14dp"
        app:text="@string/title"
        app:textColor="@color/blue"
        app:textSize="60sp"
        app:textStyle="bold"
        app:typeface="sans" />

    <Button
        app:id="@+id/button2"
        style="@style/ButtonBar"
        app:layout_width="150dp"
        app:layout_height="wrap_content"
        app:layout_alignLeft="@+id/button1"
        app:layout_below="@+id/button1"
        app:layout_marginTop="52dp"
        app:text="@string/button2"
        app:typeface="sans" />

    <ImageButton
        app:id="@+id/imageButton1"
        style="@style/FullscreenActionBarStyle"
        app:layout_width="wrap_content"
        app:layout_height="wrap_content"
        app:layout_alignParentBottom="true"
        app:layout_alignRight="@+id/textView1"
        app:contentDescription="@string/dogepic_info"
        app:src="@drawable/doge" />

    <TextView
        app:id="@+id/textView2"
        app:layout_width="wrap_content"
        app:layout_height="wrap_content"
        app:layout_alignTop="@+id/imageButton1"
        app:layout_centerHorizontal="true"
        app:text="@string/dogepic_caption"
        app:textColor="@color/green"
        app:textSize="15sp"
        app:textStyle="bold"
        app:typeface="sans" />

</RelativeLayout>
</code></pre>
