<p>I have designed the database in SQLlite Browser. And now i am trying to copy it to my root path.</p>

<p><strong>Problem being faced</strong></p>

<p>Error Copying database</p>

<p><strong>LINK</strong>  :- I am taking help from this example</p>

<p><a href="http://www.reigndesign.com/blog/using-your-own-sqlite-database-in-android-applications/" rel="nofollow">Link to add external Sqllite Db to app</a></p>

<p><strong>My DBhelper Class</strong></p>

<pre><code>package com.example.demo;

public class DBHelper extends SQLiteOpenHelper{


    //The Android's default system path of your application database.
    private static String DB_PATH = "/data/data/com.example.demo/databases/";

    private static String DB_NAME = "assesmenttool";

    private SQLiteDatabase myDataBase; 

    private final Context myContext;

    /**
     * Constructor
     * Takes and keeps a reference of the passed context in order to access to the application assets and resources.
     * @param context
     */
    public DBHelper(Context context) {

        super(context, DB_NAME, null, 1);
        this.myContext = context;
    }   

  /**
     * Creates a empty database on the system and rewrites it with your own database.
     * */
    public void createDataBase() throws IOException{

        boolean dbExist = checkDataBase();

        if(dbExist){
            //do nothing - database already exist
        }else{

            //By calling this method and empty database will be created into the default system path
               //of your application so we are gonna be able to overwrite that database with our database.
            this.getReadableDatabase();

            try {

                copyDataBase();

            } catch (IOException e) {

                throw new Error("Error copying database");

            }
        }

    }

    /**
     * Check if the database already exist to avoid re-copying the file each time you open the application.
     * @return true if it exists, false if it doesn't
     */
    private boolean checkDataBase(){

        SQLiteDatabase checkDB = null;

        try{
            String myPath = DB_PATH + DB_NAME;
            checkDB = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY);

        }catch(SQLiteException e){

            //database does't exist yet.

        }

        if(checkDB != null){

            checkDB.close();

        }

        return checkDB != null ? true : false;
    }

    /**
     * Copies your database from your local assets-folder to the just created empty database in the
     * system folder, from where it can be accessed and handled.
     * This is done by transfering bytestream.
     * */
    private void copyDataBase() throws IOException{

        //Open your local db as the input stream
        InputStream myInput = myContext.getAssets().open(DB_NAME);

        // Path to the just created empty db
        String outFileName = DB_PATH + DB_NAME;

        //Open the empty db as the output stream
        OutputStream myOutput = new FileOutputStream(outFileName);

        //transfer bytes from the inputfile to the outputfile
        byte[] buffer = new byte[1024];
        int length;
        while ((length = myInput.read(buffer))>0){
            myOutput.write(buffer, 0, length);
        }

        //Close the streams
        myOutput.flush();
        myOutput.close();
        myInput.close();

    }

    public void openDataBase() throws SQLException{

        //Open the database
        String myPath = DB_PATH + DB_NAME;
        myDataBase = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY);

    }

    @Override
    public synchronized void close() {

            if(myDataBase != null)
                myDataBase.close();

            super.close();

    }

    @Override
    public void onCreate(SQLiteDatabase db) {

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }

        // Add your public helper methods to access and get content from the database.
       // You could return cursors by doing "return myDataBase.query(....)" so it'd be easy
       // to you to create adapters for your views.
 }
</code></pre>

<p><strong>My Main Activity Class</strong></p>

<pre><code>package com.example.demo;

import java.io.IOException;



public class MainActivity extends Activity {
    String Question_ID,Title,TitleDescription,QuestionText,QuestionTemplate,QuestionImage;
    DBHelper dbhelper;  
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


          dbhelper = new DBHelper(this);

            try {

                dbhelper.createDataBase();

        } catch (IOException ioe) {

            throw new Error("Unable to create database");

        }

        try {

            dbhelper.openDataBase();

        }catch(SQLException sqle){

            throw sqle;

        }



    }






}
</code></pre>

<p><strong>My LogCat</strong></p>

<pre><code>07-15 05:24:09.171: E/SQLiteLog(19825): (14) cannot open file at line 30191 of [00bb9c9ce4]
07-15 05:24:09.171: E/SQLiteLog(19825): (14) os_unix.c:30191: (2) open(/data/data/com.example.demo/databases/assesmenttool) - 
07-15 05:24:09.191: E/SQLiteDatabase(19825): Failed to open database '/data/data/com.example.demo/databases/assesmenttool'.
07-15 05:24:09.191: E/SQLiteDatabase(19825): android.database.sqlite.SQLiteCantOpenDatabaseException: unknown error (code 14): Could not open database
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteConnection.nativeOpen(Native Method)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:209)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteConnection.open(SQLiteConnection.java:193)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteConnectionPool.openConnectionLocked(SQLiteConnectionPool.java:463)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:185)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteConnectionPool.open(SQLiteConnectionPool.java:177)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteDatabase.openInner(SQLiteDatabase.java:804)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteDatabase.open(SQLiteDatabase.java:789)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:694)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:669)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at com.example.demo.DBHelper.checkDataBase(DBHelper.java:76)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at com.example.demo.DBHelper.createDataBase(DBHelper.java:43)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at com.example.demo.MainActivity.onCreate(MainActivity.java:27)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.Activity.performCreate(Activity.java:5231)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2159)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2245)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.ActivityThread.access$800(ActivityThread.java:135)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.os.Handler.dispatchMessage(Handler.java:102)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.os.Looper.loop(Looper.java:136)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at android.app.ActivityThread.main(ActivityThread.java:5017)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at java.lang.reflect.Method.invokeNative(Native Method)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at java.lang.reflect.Method.invoke(Method.java:515)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
07-15 05:24:09.191: E/SQLiteDatabase(19825):    at dalvik.system.NativeStart.main(Native Method)
07-15 05:24:09.481: E/AndroidRuntime(19825): FATAL EXCEPTION: main
07-15 05:24:09.481: E/AndroidRuntime(19825): Process: com.example.demo, PID: 19825
07-15 05:24:09.481: E/AndroidRuntime(19825): java.lang.Error: Error copying database
07-15 05:24:09.481: E/AndroidRuntime(19825):    at com.example.demo.DBHelper.createDataBase(DBHelper.java:59)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at com.example.demo.MainActivity.onCreate(MainActivity.java:27)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.Activity.performCreate(Activity.java:5231)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1087)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2159)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2245)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.ActivityThread.access$800(ActivityThread.java:135)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1196)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.os.Handler.dispatchMessage(Handler.java:102)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.os.Looper.loop(Looper.java:136)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at android.app.ActivityThread.main(ActivityThread.java:5017)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at java.lang.reflect.Method.invokeNative(Native Method)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at java.lang.reflect.Method.invoke(Method.java:515)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)
07-15 05:24:09.481: E/AndroidRuntime(19825):    at dalvik.system.NativeStart.main(Native Method)
</code></pre>
