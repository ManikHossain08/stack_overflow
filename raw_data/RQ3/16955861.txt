<p>I'm new OOP user.</p>

<p>I have a simple question in Android. </p>

<p>I want to use </p>

<pre><code>new DrawMonthLineChart(titles, x, y).getChartView()
</code></pre>

<p>get line chart view.</p>

<p>( If I combine chart code file in the main code, the line chart code is correct)</p>

<p>I am take drawchart part to independent file.</p>

<p>But It's will show error in here.(below)</p>

<pre><code>View chart = ChartFactory.getCubeLineChartView( this, dataset, renderer, 0.14f);
</code></pre>

<p>It is error message below:</p>

<pre><code>The method getCubeLineChartView(Context, XYMultipleSeriesDataset,     XYMultipleSeriesRenderer, float) in the type ChartFactory is not applicable for the     arguments (DrawMonthLineChart, XYMultipleSeriesDataset, XYMultipleSeriesRenderer, float)
</code></pre>

<p>I think the problem is  "this" not meaning context.</p>

<p>I don't know how to fix the "this" to something .</p>

<p>Have any one can give me a hand?</p>

<p>Thank you very much.</p>

<p>My Main code is below:</p>

<pre><code>    package net.test.achartenginedemo;

    import java.util.ArrayList;
    import java.util.List;

    import org.achartengine.ChartFactory;
    import org.achartengine.chart.PointStyle;
    import org.achartengine.model.XYMultipleSeriesDataset;
    import org.achartengine.model.XYSeries;
    import org.achartengine.renderer.XYMultipleSeriesRenderer;
    import org.achartengine.renderer.XYSeriesRenderer;

    import android.os.Bundle;
    import android.app.Activity;
    import android.content.Intent;
    import android.graphics.Color;
    import android.graphics.Paint.Align;
    import android.util.Log;
    import android.view.Menu;
    import android.view.View;
    import android.view.View.OnClickListener;
    import android.view.ViewGroup.LayoutParams;
    import android.widget.LinearLayout;

    public class AchartengineMain extends Activity {

        private LinearLayout ll ;

                @Override
                protected void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.activity_achartengine_main);

            ll = (LinearLayout) findViewById(R.id.chartLL);

            String[] titles = new String[] { "line1"};

            List<double[]> x = new ArrayList<double[]>();

            List<double[]> y = new ArrayList<double[]>();


            x.add(new double[] { 1, 2.2, 3.4, 4.6, 5.8, 10 });
            y.add(new double[] { 80, 78, 75, 82, 75, 78 });



            ll.addView(new DrawMonthLineChart(titles, x, y).getChartView(), new                 LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT,LinearLayout.LayoutParams.WRAP_CONTENT));

}

@Override
public boolean onCreateOptionsMenu(Menu menu) {
    // Inflate the menu; this adds items to the action bar if it is present.
    getMenuInflater().inflate(R.menu.achartengine_main, menu);
    return true;
}
</code></pre>

<p>}</p>

<p>My drawMonthChart code is below:</p>

<pre><code>    package net.test.achartenginedemo;

    import java.util.List;

    import org.achartengine.ChartFactory;
    import org.achartengine.chart.PointStyle;
    import org.achartengine.model.XYMultipleSeriesDataset;
    import org.achartengine.model.XYSeries;
    import org.achartengine.renderer.XYMultipleSeriesRenderer;
    import org.achartengine.renderer.XYSeriesRenderer;

    import android.graphics.Color;
    import android.graphics.Paint.Align;
    import android.view.View;

    public class DrawMonthLineChart {

        private String[] titles = new String[] { "line1" };
        private List<double[]> x;
        private List<double[]> y;
        public DrawMonthLineChart( String[] titles, List<double[]> x , List<double[]> y){
            this.titles = titles;
            this.x = x;
            this.y = y;

        }

        public View getChartView()
        {

            XYMultipleSeriesDataset dataset = buildDaset(titles, x, y);

            int[] colors = new int[] { Color.BLUE };

            PointStyle[] styles = new PointStyle[] { PointStyle.CIRCLE};


            XYMultipleSeriesRenderer renderer = buildRenderer(colors, styles, true);

            setChartSettings(renderer, "line chart test", "", "", 50, 200,-1, 13, 
            Color.BLACK,x);
            // ------------------***************here*******-------------
            View chart = ChartFactory.getCubeLineChartView( this, dataset, renderer, 0.14f);
            // ------------------***************here*******-------------

            return chart;

        }


private XYMultipleSeriesDataset buildDaset(String[] titles,
        List<double[]> xValues, List<double[]> yValues) {

    XYMultipleSeriesDataset dataset = new XYMultipleSeriesDataset();


    int length = titles.length;
    for (int i = 0; i < length; i++) {

        XYSeries series = new XYSeries(titles[i]);

        double[] xV = xValues.get(i);
        double[] yV = yValues.get(i);
        int seriesLength = xV.length;

        for (int k = 0; k < seriesLength; k++) {
            series.add(xV[k], yV[k]);
        }
        dataset.addSeries(series);
    }

    return dataset;
}


private XYMultipleSeriesRenderer buildRenderer(int[] colors,
        PointStyle[] styles, boolean fill) {

    XYMultipleSeriesRenderer renderer = new XYMultipleSeriesRenderer();
    int length = colors.length;

    for (int i = 0; i < length; i++) {
        XYSeriesRenderer r = new XYSeriesRenderer();
        r.setColor(colors[i]);
        r.setPointStyle(styles[i]);
        r.setFillPoints(fill);
        r.setLineWidth(2.5f);
        renderer.addSeriesRenderer(r);
    }


    return renderer;
}


private void setChartSettings(XYMultipleSeriesRenderer renderer,
        String title, String xTitle, String yTitle, double yMin,
        double yMax, double xMin, double xMax, int axesColor, List<double[]> x) {


            renderer.setChartTitle(title);
            renderer.setChartTitleTextSize(24);
            renderer.setXTitle(xTitle);
            renderer.setYTitle(yTitle);
            renderer.setXAxisMin(xMin);
            renderer.setXAxisMax(xMax);
            renderer.setYAxisMin(yMin);
            renderer.setYAxisMax(yMax);
            renderer.setYLabels(18);
            renderer.setXLabelsColor(axesColor);
            renderer.setLabelsColor(Color.BLACK);
            renderer.setShowGrid(true);
            renderer.setClickEnabled(false);
            renderer.setShowCustomTextGrid(true);
            renderer.setShowGridY(true);

        }
    }
</code></pre>
