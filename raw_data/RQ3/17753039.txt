<p>I am having a problem with regards to sqlite3 database... I am getting an sqlite_open_v2 failed error. Can anyone please help me.? Any help will be greatly appreciated.. This is the source code.. This is for our project.. Please help.. Thanks in advance..</p>

<pre><code>package com.flip.dao;


import java.io.File;  
import java.io.FileOutputStream;  
import java.io.IOException;  
import java.io.InputStream;  
import java.io.OutputStream;  
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import com.flip.main.friend;
import com.flip.model.Words;


import android.content.Context;  
import android.database.Cursor;  
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;  
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteOpenHelper;  
import android.util.Log;

public class DBHelper extends SQLiteOpenHelper {  

 private static String DB_NAME = "WordDatabase.sqlite3";  
 private SQLiteDatabase db;  
 private final Context context;  
 private String DB_PATH;  
 private String TABLE_NAME = "SevenLetterWords";

 static final int DATABASE_VERSION = 1;

    ArrayList<String> stringList = new ArrayList<String>();
    int selectedWord;
    String randomWord;
     Random randomGenerator = new Random();



 public DBHelper(Context context) {  
  super(context, DB_NAME, null, DATABASE_VERSION);  
  this.context = context;  
  DB_PATH = "/data/data/" + context.getPackageName() + "/" + "databases/";
  System.out.println(""+DB_PATH);
 }  

 public void createDataBase() throws IOException {
    boolean dbExist = checkDataBase();
    if (dbExist) {
        Log.v("DB Exists","db exists");

        this.getWritableDatabase();
    }
    dbExist = checkDataBase();

    if (!dbExist) {

        this.getReadableDatabase();
            try {
                    copyDataBase();
            } catch (IOException e) {
                throw new Error("Error Copying Database");
            }
    }
    }

     private boolean checkDataBase(){

            File dbFile = new File(DB_PATH + DB_NAME);
            return dbFile.exists();


        }  



 public void openDataBase(){

    String path = DB_PATH + DB_NAME;
    db = SQLiteDatabase.openDatabase(path, null, SQLiteDatabase.OPEN_READWRITE+SQLiteDatabase.NO_LOCALIZED_COLLATORS);

}



 private void copyDataBase() throws IOException {  

  InputStream myInput = context.getAssets().open(DB_NAME);  
  String outFileName = DB_PATH + DB_NAME;  
  OutputStream myOutput = new FileOutputStream(outFileName);  
  byte[] buffer = new byte[1024];  
  int length;  
  while ((length = myInput.read(buffer)) > 0) {  
   myOutput.write(buffer, 0, length);  
  }  

  // Close the streams  
  myOutput.flush();  
  myOutput.close();  
  myInput.close();  

 } 



 public boolean exists(String word) { 
     Cursor cursor = null;

     String WORD_TABLE = randomWord;
     System.out.println(""+randomWord);
     String [] selectionArgs = {word + "%"};

     cursor = db.rawQuery("SELECT * from "+ WORD_TABLE  + " WHERE Word like ?", selectionArgs);

    boolean exists = (cursor.getCount() > 0);

    cursor.close();

    return exists;
 }

 public String random(){


     List<Words> words = getAllWords();      

     try {

        createDataBase();

    } catch (IOException ioe) {

        throw new Error("Unable to create database");

    }

    try {

        openDataBase();

    }catch(SQLException sqle){

        throw sqle;

    }


    for (Words wrd : words) {

        String log = "WORDPOOL: "+ wrd.getWord() +" ID: "+ wrd.getId();
        stringList.add(wrd.getWord());


              // Writing Contacts to log
      Log.d("Name: ", log);
     } 


     selectedWord = randomGenerator.nextInt(stringList.size());

     System.out.println("HEY"+stringList.remove(selectedWord)+" "+selectedWord);
     randomWord = stringList.remove(selectedWord-1);

        return randomWord;

}

public List<Words> getAllWords() { 

      String myPath = DB_PATH + DB_NAME;  
      db = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY); 


     List<Words> wordList = new ArrayList<Words>();
     // Select All Query


     String selectQuery = "SELECT  * FROM " + TABLE_NAME;

     SQLiteDatabase db = this.getWritableDatabase();
     Cursor cursor = db.rawQuery(selectQuery, null);

     // looping through all rows and adding to list
     if (cursor.moveToFirst()) {
         do {
             Words word = new Words();
             word.setId(Integer.parseInt(cursor.getString(0)));
             word.setWord(cursor.getString(1));

             // Adding contact to list
             wordList.add(word);
         } while (cursor.moveToNext());
     }

     // return contact list
     return wordList;
     }  








 @Override  
 public void onCreate(SQLiteDatabase arg0) {  
  // TODO Auto-generated method stub  
 }  

 @Override  
 public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {  
  // TODO Auto-generated method stub  
 }  
}  
</code></pre>

<p>The logcat is also attached here... </p>

<pre><code>07-19 17:45:57.335: D/dalvikvm(26578): GC_EXTERNAL_ALLOC freed 62K, 48% free 2815K/5379K, external 408K/517K, paused 38ms
07-19 17:45:57.976: D/dalvikvm(26578): GC_EXTERNAL_ALLOC freed 6K, 48% free 2828K/5379K, external 1093K/1535K, paused 35ms
07-19 17:45:58.210: D/dalvikvm(26578): GC_EXTERNAL_ALLOC freed 7K, 48% free 2840K/5379K, external 1448K/1897K, paused 35ms
07-19 17:45:58.492: I/System.out(26578): /data/data/com.flip/databases/
07-19 17:45:58.492: E/Database(26578): sqlite3_open_v2("/data/data/com.flip/databases/WordDatabase.sqlite3", &handle, 1, NULL) failed
07-19 17:45:58.500: D/AndroidRuntime(26578): Shutting down VM
07-19 17:45:58.500: W/dalvikvm(26578): threadid=1: thread exiting with uncaught exception (group=0x40018578)
07-19 17:45:58.515: E/AndroidRuntime(26578): FATAL EXCEPTION: main
07-19 17:45:58.515: E/AndroidRuntime(26578): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.flip/com.flip.main.friend}: android.database.sqlite.SQLiteException: unable to open database file
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1651)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1667)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.ActivityThread.access$1500(ActivityThread.java:117)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:935)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.os.Handler.dispatchMessage(Handler.java:99)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.os.Looper.loop(Looper.java:130)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.ActivityThread.main(ActivityThread.java:3687)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at java.lang.reflect.Method.invokeNative(Native Method)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at java.lang.reflect.Method.invoke(Method.java:507)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:867)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:625)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at dalvik.system.NativeStart.main(Native Method)
07-19 17:45:58.515: E/AndroidRuntime(26578): Caused by: android.database.sqlite.SQLiteException: unable to open database file
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.database.sqlite.SQLiteDatabase.dbopen(Native Method)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.database.sqlite.SQLiteDatabase.<init>(SQLiteDatabase.java:1886)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.database.sqlite.SQLiteDatabase.openDatabase(SQLiteDatabase.java:821)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at com.flip.dao.DBHelper.getAllWords(DBHelper.java:179)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at com.flip.dao.DBHelper.random(DBHelper.java:133)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at com.flip.main.friend.onCreate(friend.java:142)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)
07-19 17:45:58.515: E/AndroidRuntime(26578):    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1615)
07-19 17:45:58.515: E/AndroidRuntime(26578):    ... 11 more
</code></pre>
