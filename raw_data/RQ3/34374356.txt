<p>I have a problem to display a data from my database using a cursor.</p>

<p>Here is my code for the SQLiteOpenHelper class:</p>

<pre><code>package com.example.kazo.pal;

import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteException;
import android.database.sqlite.SQLiteOpenHelper;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class DataBaseHelper extends SQLiteOpenHelper {

//The Android's default system path of your application database.

private static String DB_NAME = "dbTest2";

private SQLiteDatabase myDataBase;

private final Context myContext;


/**
 * Constructor
 * Takes and keeps a reference of the passed context in order to access to the application assets and resources.
 * @param context
 */
public DataBaseHelper(Context context) {

    super(context, DB_NAME, null, 1);
    this.myContext = context;
}

/**
 * Creates a empty database on the system and rewrites it with your own database.
 * */
public void createDataBase() throws IOException {

    boolean dbExist = checkDataBase();

    if(dbExist){
        //do nothing - database already exist
    }else{

        //By calling this method and empty database will be created into the default system path
        //of your application so we are gonna be able to overwrite that database with our database.
        this.getReadableDatabase();

        try {

            copyDataBase();

        } catch (IOException e) {

            throw new Error("Error copying database");

        }
    }

}

/**
 * Check if the database already exist to avoid re-copying the file each time you open the application.
 * @return true if it exists, false if it doesn't
 */
private boolean checkDataBase(){

    SQLiteDatabase checkDB = null;

    try{
        String myPath = myContext.getDatabasePath(DB_NAME).getPath();
        checkDB = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY);

    }catch(SQLiteException e){

        //database does't exist yet.

    }

    if(checkDB != null){

        checkDB.close();

    }

    return checkDB != null ? true : false;
}


/**
 * Copies your database from your local assets-folder to the just created empty database in the
 * system folder, from where it can be accessed and handled.
 * This is done by transfering bytestream.
 * */
private void copyDataBase() throws IOException{

    //Open your local db as the input stream
    InputStream myInput = myContext.getAssets().open(DB_NAME);

    // Path to the just created empty db
    String outFileName = myContext.getDatabasePath(DB_NAME).getPath();

    //Open the empty db as the output stream
    OutputStream myOutput = new FileOutputStream(outFileName);

    //transfer bytes from the inputfile to the outputfile
    byte[] buffer = new byte[1024];
    int length;
    while ((length = myInput.read(buffer))>0){
        myOutput.write(buffer, 0, length);
    }

    //Close the streams
    myOutput.flush();
    myOutput.close();
    myInput.close();

}

public void openDataBase() throws SQLException {

    //Open the database
    String myPath = myContext.getDatabasePath(DB_NAME).getPath();
    myDataBase = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READONLY);

}

@Override
public synchronized void close() {

    if(myDataBase != null)
        myDataBase.close();

    super.close();

}

@Override
public void onCreate(SQLiteDatabase myDataBase) {

}


@Override
public void onUpgrade(SQLiteDatabase myDataBase, int oldVersion, int newVersion) {
}


public Cursor getC(String Prenom) {
    Cursor c=myDataBase.rawQuery("SELECT * FROM myTable where prenom=?", new String [] {Prenom});
    c.moveToFirst();

    return c;
}


}
</code></pre>

<p>Here is my code for my main activity:</p>

<pre><code>package com.example.kazo.pal;

import android.app.Activity;
import android.content.Intent;
import android.database.SQLException;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.widget.TextView;

import java.io.IOException;

public class MainActivity extends Activity {
TextView monTexte = null;

@Override
public void onCreate(Bundle savedInstanceState) {


    DataBaseHelper myDbHelper = new DataBaseHelper(MainActivity.this);

    try {

        myDbHelper.createDataBase();

    } catch (IOException ioe) {

        throw new Error("Unable to create database");

    }

    try {

        myDbHelper.openDataBase();

    }catch(SQLException sqle){

        throw sqle;

    }


    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    String nom=myDbHelper.getC("alex").getString(2);


    monTexte = (TextView)findViewById(R.id.db);
    monTexte.setText(nom);


}}
</code></pre>

<p>When I run the application this way, it works and my data is diplayed in the activity, but when I modify the following line of code:</p>

<pre><code>Cursor c=myDataBase.rawQuery("SELECT * FROM myTable where prenom=?", new String [] {Prenom});
</code></pre>

<p>to:</p>

<pre><code>Cursor c=myDataBase.rawQuery("SELECT nom FROM myTable where prenom=?", new String [] {Prenom});
</code></pre>

<p>the application crashes.</p>

<p>What is the problem ? Why does my application crash when I do this modification ?</p>
