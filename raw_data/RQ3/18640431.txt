<p>i am on a project where i have a database with 2 or more tables n lots of entries. So i am using sqlite to create this database. As i have read in few other answers i will have to copy the database file to the assets folder. now i have the database file in the assets folder. Here is the code i have used for DataBaseHelperClass</p>

<pre><code>package com.example.basic;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.util.Log;

public class DataBaseHelperClass extends SQLiteOpenHelper {

    private static String TAG = "DataBaseHelperClass";

    //The Android's default system path of your application database.
    private static String DB_PATH = "/data/data/com.example.astro/databases/";
    // Data Base Name.
    private static final String DATABASE_NAME = "MyDatabase.sqlite";
    // Data Base Version.
    private static final int DATABASE_VERSION = 1;
    // Table Names of Data Base.
    static final String TABLE_Name = "Totlist";

    public Context context;
    static SQLiteDatabase sqliteDataBase;

    public DataBaseHelperClass(Context context) {       
        super(context, DATABASE_NAME, null ,DATABASE_VERSION);
        this.context = context;
    }

    public void createDataBase() throws IOException{
        //check if the database exists
        boolean databaseExist = checkDataBase();

        if(databaseExist){
            // Do Nothing.
        }else{
            this.createDataBase();         
            copyDataBase(); 
        }// end if else dbExist
    } // end createDataBase().


    public boolean checkDataBase(){
        File databaseFile = new File(DB_PATH + DATABASE_NAME);
        return databaseFile.exists();        
    }

    private void copyDataBase() throws IOException{ 
        //Open your local db as the input stream
        InputStream myInput = context.getAssets().open(DATABASE_NAME); 
        // Path to the just created empty db
        String outFileName = DB_PATH + DATABASE_NAME; 
        //Open the empty db as the output stream
        OutputStream myOutput = new FileOutputStream(outFileName); 
        //transfer bytes from the input file to the output file
        byte[] buffer = new byte[1024];
        int length;
        while ((length = myInput.read(buffer))>0){
            myOutput.write(buffer, 0, length);
        }

      //Close the streams
        myOutput.flush();
        myOutput.close();
        myInput.close();




    }

    /**
     * This method opens the data base connection.
     * First it create the path up till data base of the device.
     * Then create connection with data base.
     */
    public void openDataBase() throws SQLException{      
        //Open the database
        String myPath = DB_PATH + DATABASE_NAME;
        sqliteDataBase = SQLiteDatabase.openDatabase(myPath, null, SQLiteDatabase.OPEN_READWRITE);  
    }

    /**
     * This Method is used to close the data base connection.
     */
    public synchronized void close() { 
        if(sqliteDataBase != null)
            sqliteDataBase.close(); 
        super.close(); 
    }

    public String getUserNameFromDB(){
        String query = "select desc From "+TABLE_Name;
        Cursor cursor = sqliteDataBase.rawQuery(query, null);
        String description = null;
        if(cursor.getCount()>0){
            if(cursor.moveToFirst()){
        do{
                    description = cursor.getString(0);
                }while (cursor.moveToNext());
            }
        }
        return description;
    }

    public String tot(){
        String rawQuery = "SELECT tot from Totlist WHERE Tid=1";
        Cursor cursor = sqliteDataBase.rawQuery(rawQuery, null);
        String desc=null;
        if(cursor.getCount()>0){
            if(cursor.moveToFirst()){
                do{
                    desc=cursor.getString(0);
                }while(cursor.moveToNext());
                }
            }

        return desc;
    }

    public String chq()
    {
        String q="hee";
        return q;
    }


    public void onCreate(SQLiteDatabase db) {
        // No need to write the create table query.
        // As we are using Pre built data base.
        // Which is ReadOnly.
    }

    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // No need to write the update table query.
        // As we are using Pre built data base.
        // Which is ReadOnly.
        // We should not update it as requirements of application.
    }   
}
</code></pre>

<p>this shows lots of errors in the logcat. one of them is "error opening trace file: no such file or directory (2)". The problem could be that the file in assets is not copied to the default location n hence it says no such file or directory. this is my second question about this database thing n still i am not able to get the result from it. The code in my mainactivity is like this. </p>

<pre><code>package com.example.basic;


import android.os.Bundle;
import android.app.Activity;
import android.database.Cursor;
import android.text.Editable;
import android.view.Menu;
import android.widget.TextView;

public class Basic extends Activity {


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.basic);


        DataBaseHelperClass db = new DataBaseHelperClass(this);
        String s=db.chq();
        TextView tv=(TextView)findViewById(R.id.TextView1);
        tv.setText(s);



    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.basic, menu);
        return true;
    }

}
</code></pre>

<p>i only have these two .java files in my project. anything wrong in this?</p>
